{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGif.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","propType","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC5CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAUT,EACVU,SAjBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,YAsB/BZ,EAAYe,SAAW,CACnBd,c,OAAee,EAAUC,KAAKC,YAGnBlB,IChCFmB,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAOhB,GAAP,uBAAAiB,EAAA,6DACbL,EADa,iDACoCM,UAAUlB,GAD9C,+DAEAmB,MAAMP,GAFN,cAEbQ,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAKa,EAAIC,OAAOC,iBAAiBf,QARtB,kBAWZW,GAXY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAf5B,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EACXR,mBAAS,CAC/B8B,KAAM,GACNO,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAcrC,OARAC,qBAAU,WACNhB,EAAQhB,GAAUiC,MAAM,SAAAC,GACpBH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGlB,CAAC7B,IACG8B,EDV0BK,CAAYnC,GAAhC0B,EAFsB,EAE3BJ,KAAaO,EAFc,EAEdA,QAyBrB,OACI,oCACA,wBAAIhB,UAAU,qCAAsCb,GAClD6B,GAAW,yCACb,yBAAKhB,UAAU,aAEPa,EAAOF,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIW,IAAQX,EAAIf,IACRe,UEPbY,EA9BM,WAAM,MAEa7C,mBAAS,CAAC,wBAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KASvB,OACI,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQ+C,EAAWd,KAAI,SAAAxB,GAAQ,OACnB,kBAAC,EAAD,CACIoC,IAAQpC,EACRA,SAAUA,UCnBtCuC,IAASC,OACH,kBAAC,EAAD,MACJC,SAASC,eAAe,W","file":"static/js/main.d263b791.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 1){\r\n            setCategories( category => [ inputValue, ...category ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputValue }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    //console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=eeHpmLG88Bq9kJat3GstH83c1Kggo6UI`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n    //console.log(gifs);\r\n    //setImages(gifs);\r\n}","import React /*,{useState, useEffect}*/ from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGif';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGif(category);\r\n    // const [count, setCount] = useState(0);\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then( setImages );\r\n    // }, [ category ]);\r\n\r\n    // const getGifs = async() => {\r\n    //     const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=eeHpmLG88Bq9kJat3GstH83c1Kggo6UI`;\r\n    //     const resp = await fetch(url);\r\n    //     const {data} = await resp.json();\r\n    //     const gifs = data.map(img => {\r\n    //         return {\r\n    //             id: img.id,\r\n    //             title: img.title,\r\n    //             url: img.images.downsized_medium.url\r\n    //         }\r\n    //     });\r\n    //     console.log(gifs);\r\n    //     setImages(gifs);\r\n    // }\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h4 className=\"animate__animated animate__fadeIn\">{ category }</h4>\r\n        { loading && <p>Loading...</p> }\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map((img) => (\r\n                    <GifGridItem \r\n                        key = { img.id }\r\n                        {...img}\r\n                        // img = { img }\r\n                    />\r\n                ))\r\n            }\r\n            {/* <ol>{images.map(({id, title}) => (\r\n                <li key={id}>{title}</li>\r\n            ))}</ol> */}\r\n            {/* <ol>{images.map(img => (\r\n                <li key={img.id}>{img.title}</li>\r\n            ))}</ol> */}\r\n            {/* <h3>{count}</h3>\r\n            <button onClick={()=>setCount(count + 1)}>+</button> */}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGif'\r\n\r\nexport const useFetchGif = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n    }, [category]);\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    //const categories = ['The Big Bang Theory', 'Two and a half men', 'Friends'];\r\n    const [categories, setCategories] = useState(['The Big Bang Theory']);\r\n\r\n    //const handleAdd = () => {\r\n        //setCategories([...categories, 'The Simpson']); // TambiÃ©n es una forma de mutar el useState\r\n        //setCategories( cats => [...categories, 'The Simpson'] );\r\n    //}\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpert App</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr></hr>\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category={category}\r\n                        />\r\n                    )\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n      <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}